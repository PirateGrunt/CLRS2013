\documentclass[xcolor=dvipsnames]{beamer}
%%\usepackage[dvipsnames]{xcolor}

\usefonttheme[onlymath]{serif}

\setbeamercolor{title}{fg=black}
\setbeamercolor{frametitle}{fg=black}

\setbeamertemplate{itemize items}[circle] 
\setbeamercolor{itemize item}{fg=black} 
\begin{document}

\title{Reserving, linear regression, MRMR and R}
\author{Brian A. Fannin}

\maketitle

% very important to use option [fragile] for frames containing code output!

<<Options, echo=FALSE, results='hide', message=FALSE>>=
options(width=40)
@

\begin{frame} {Agenda}
  \begin{itemize}
    \item Introducing MRMR
    \item Data visualization 
    \item Linear modeling
    \item Fit diagnostics
    \item Projection
    \item Grouped visualization
    \item Another view of regression
    \item Further
  \end{itemize}
\end{frame}

\begin{frame} {Introducing MRMR}
  MRMR is another R package for use in analyzing reserves.
  
  MRMR was heavily influenced by the following:
  \begin{itemize}
    \item Andrew Gelman and Jennifer Hill, "Data Analysis Using Regression and Multilevel/Hierarchical Models"
    \item ggplot2 and Hadley Wickham
    \item Leigh Halliwell and Judge et al
  \end{itemize}
\end{frame}

\begin{frame} {MRMR Structure}
  MRMR supports three S4 classes: Triangle, TriangleModel and TriangleProjection. These have a rough correspondence to the behavior of functions lm, glm and lme4.
  
  \begin{tabular} { | l | l | l | }
    \hline
    Item & R & MRMR \\ \hline
    Data storage & Data frame & Triangle \\ \hline
    Model & Function lm (S3 object) & TriangleModel \\ \hline
    Project & Function predict (vector) & TriangleProjection \\ 
    \hline
  \end{tabular}
\end{frame}

\begin{frame}[fragile]{Startup MRMR}
<<Starup-MRMR, echo=TRUE, results='hide', message=FALSE>>=
library(MRMR)
?MRMR
@
\end{frame}

\begin{frame}{Basic requirements}
  A triangle object must possess the following data elements:
  \begin{itemize}
    \item Temporal dimensions for origin period, development lag and evaluation date. These are stored as lubridate objects.
    \item Measures
      \begin{itemize}
        \item Stochastic - Loss, claim, etc. These are time series variables and candidates for prediction. MRMR will adjust these so that incremental, cumulative and prior cumulative columns are formed.
        \item Static - Typically exposure variables. These will not be adjusted
      \end{itemize}
    \item One or more grouping elements
  \end{itemize}
\end{frame}

\begin{frame}[fragile]{lubridate}
<<lubridateExample, echo=TRUE, tidy=TRUE>>=
myPeriod = months(6)
myPeriod / months(1)
mdy("06-30-2012")
typeof(mdy("06-30-2012"))
@
\end{frame}

\begin{frame}[fragile]{A very basic example}
<<VeryBasicExample1, echo=TRUE, tidy=TRUE, results='hide'>>=
AccidentYear = c(2002, 2002, 2002 
               , 2003, 2003
               , 2004)

Month = c(12, 24, 36
        , 12, 24
        , 12)

Paid = c(2318,  7932, 13822
       , 1743,  6240
       , 2221)

EP = c( 61183,  61183,  61183
     ,  69175,  69175
     ,  99322)

df = data.frame(AccidentYear = AccidentYear, Month = Month, Paid = Paid, EP = EP)
head(df)
@
\end{frame}

\begin{frame}[fragile] {Moving the data into a Triangle object}
<<VeryBasicExample2, echo=TRUE, tidy=TRUE>>=
myTriangle = newTriangle(TriangleData = df
                         , OriginPeriods = AccidentYear
                         , DevelopmentLags = Month
                         , Cumulative = TRUE
                         , StochasticMeasures = c("Paid")
                         , StaticMeasures = c("EP")
                         , Verbose = FALSE)
@
\end{frame}

\begin{frame}[fragile]{What's in a Triangle object?}
<<VeryBasicExample3, echo=TRUE>>=
slotNames(myTriangle)
@
\end{frame}

\begin{frame}[fragile]{What sort of data frame have I created?}
<<VeryBasicExample3-1, echo=TRUE, tidy=TRUE>>=
names(myTriangle@TriangleData)
@
\end{frame}

\begin{frame}[fragile]{A very basic plot}
<<VeryBasicExample4, fig.width=8, fig.height=5, echo=TRUE, tidy=TRUE>>= 
plotTriangle(myTriangle, Predictor = "DevInteger", Response = "CumulativePaid")
@
\end{frame}

\begin{frame}[fragile]{Something more complex}
<<Friedland1, fig.width=8, fig.height=5, echo=TRUE, tidy=TRUE>>=
data(Friedland)
plotTriangle(Friedland, Predictor = "DevInteger", Response = "CumulativePaid")
@
\end{frame}

\begin{frame}[fragile]{Change the response term}
<<Friedland2, fig.width=8, fig.height=5, echo=TRUE, tidy=TRUE>>=
plotTriangle(Friedland, Predictor = "DevInteger", Response = "IncrementalPaid")
@
\end{frame}

\begin{frame}[fragile]{Change the time axis}
<<Friedland3, fig.width=8, fig.height=5, echo=TRUE>>=
plotTriangle(Friedland, Predictor = "EvaluationDate", Response = "IncrementalPaid")
@
\end{frame}

\begin{frame}[fragile]{Change the grouping dimension}
<<FriedlandCL1, fig.width=8, fig.height=5, echo=TRUE>>=
plotTriangle(Friedland, Predictor = "PriorPaid", Response ="IncrementalPaid", Group = "DevInteger", Lines = FALSE)
@
\end{frame}

\begin{frame}[fragile]{Add fit lines}
<<Friedland5, fig.width=8, fig.height=5, echo=TRUE>>=
plotTriangle(Friedland, Predictor = "PriorPaid", Response ="IncrementalPaid", Group = "DevInteger", Lines = FALSE, FitLines = TRUE)
@
\end{frame}

\begin{frame}[fragile]{Change the predictor variable}
<<Friedland4, fig.width=8, fig.height=5, echo=TRUE>>=
plotTriangle(Friedland, Response ="IncrementalPaid", Predictor = "EP", Group = "DevInteger", Lines = FALSE, FitLines=TRUE)
@
\end{frame}

\begin{frame}[fragile]{Fit a model}
<<FitPaidAM, echo=TRUE>>=
PaidAM1 = newTriangleModel(Triangle = Friedland, Response = "IncrementalPaid", Predictor = "EP", FitCategory = "DevInteger", Tail = 6)
@
\end{frame}

\begin{frame}[fragile]{Visualization is closely related to a model}
<<echo=TRUE, eval=FALSE, results='hide'>>=
plotTriangle(Friedland, Response ="IncrementalPaid", Predictor = "EP", Group = "DevInteger", Lines = FALSE, FitLines=TRUE)
PaidAM1 = newTriangleModel(Friedland, Response ="IncrementalPaid", Predictor = "EP", FitCategory = "DevInteger", Tail = 6)
@
\end{frame}

\begin{frame}[fragile]{A detour through linear regression}
<<UnivariateData, echo=TRUE, results='hide'>>=
set.seed(1234)
N = 100
e = rnorm(N, mean = 0, sd = 1)
B0 = 5
B1 = 1.5

X1 = rep(seq(1,10),10)
Y = B0 + B1 * X1 + e

df = data.frame(Y=Y, X1=X1, e=e)
@
\end{frame}

\begin{frame}[fragile]{Fitting a linear model}
<<UnivariateFit, echo=TRUE>>=
myFit = lm(Y ~ X1, data=df)
@
\end{frame}

\begin{frame}[fragile]{Diagnostic output}
<<UnivariateDiagnostics, echo=TRUE>>=
summary(myFit)
@
\end{frame}

\begin{frame}{Formulas in R}
  \begin{itemize}
    \item The '\textasciitilde' is typically read "is modeled as"
    \item The '+' operator adds new predictor variables to the model
    \item An intercept is always assumed. To remove it, add '+ 0' or '- 1' to the formula
    \item The ':' operator controls interactions between variables.
  \end{itemize}
\end{frame}

\begin{frame}[fragile]{Some examples}
<<FormulaExamples, echo=TRUE, eval=FALSE>>=
#The 1 is not necessary
lm(Y ~ 1 + X1, data=df)   
#This is the same as above
lm(Y ~ X1, data=df)    

lm(Y ~ 0 + X1, data=df)   #No intercept

lm(Y ~ X1 + X2, data=df)  #Two predictors

#Two predictors and an interaction
lm(Y ~ X1 + X2 + X1:X2, data=df)  
@
\end{frame}

\begin{frame}[fragile]{Diagnostics}
<<UnivariateDiagnostics2, echo=TRUE>>=
summary(myFit)$r.squared
summary(myFit)$fstatistic
@
\end{frame}

\begin{frame}[fragile]{Diagnostics pt.2}
<<UnivariateDiagnostics3, echo=TRUE>>=
as.data.frame(summary(myFit)$coefficients)
@
\end{frame}

\begin{frame}[fragile]{Plot the data}
<<UnivariatePlot, echo=TRUE, fig.width=8, fig.heigth=7>>=
plot(df$X1, df$Y, pch=19)
abline(myFit$coefficients[[1]], myFit$coefficients[[2]])
@
\end{frame}
\end{document}